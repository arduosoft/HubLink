@using PagedList.Mvc
@using Wlog.Library.BLL.Enums

@model Wlog.Web.Models.LogListModel



@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";

    Func<string, string> getSortBy = (s) =>
    {
        if (string.IsNullOrEmpty(Model.SortOrder))
        {
            return "dsc";
        }

        if (string.Compare(s, Model.SortOrder, true) == 0)
        {
            if (string.Compare("asc", Model.SortBy, true) == 0)
            {
                return "dsc";
            }
        }
        return "asc";
    };

}



    <div class="row">
        <h1>Log Messages</h1>
        @using (Html.BeginForm("Logs", "Private", FormMethod.Get))
        {

          
            <p>
                Application: 
                  @Html.DropDownListFor(m=>m.ApplicationId, new SelectList(Model.Apps, 
                               "IdApplication", "ApplicationName", 
                               Model.ApplicationId))
                Find Message: @Html.TextBox("SerchMessage", Model.SerchMessage)
                <input type="submit" value="Search" class="btn btn-default" />
            </p>
        }
    </div>
    <div class="row">
        <table class="table table-striped table-hover ">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Date", "Logs", new {ApplicationId=Model.ApplicationId, sortOrder = "Date", sortBy = getSortBy("Date"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("Level", "Logs", new {ApplicationId=Model.ApplicationId, sortOrder ="Level", sortBy = getSortBy("Level"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("Message", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "Message", sortBy = getSortBy("Message"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("AppDomain", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "AppDomain", sortBy = getSortBy("AppDomain"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("AppModule", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "AppModule", sortBy = getSortBy("AppModule"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("AppSession", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "AppSession", sortBy = getSortBy("AppSession"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("AppUser", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "AppUser", sortBy = getSortBy("AppUser"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("AppVersion", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "AppVersion", sortBy = getSortBy("AppVersion"), Model.SerchMessage })
                    </th>
                    <th>
                        @Html.ActionLink("Device", "Logs", new { ApplicationId = Model.ApplicationId, sortOrder = "Device", sortBy = getSortBy("Device"), Model.SerchMessage })
                    </th>
                </tr>
                @foreach(var item in Model.Items)
                {
                    <tr class="link" data-href="/Private/LogDetail/@item.Id">
                        <td>
                            @Html.DisplayFor(x => item.SourceDate)
                        </td>
                        <td>
                            @Html.DisplayFor(x=>item.Level)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.Message)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.AppDomain)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.AppModule)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.AppSession)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.AppUser)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.AppVersion)
                        </td>
                        <td>
                            @Html.DisplayFor(x => item.Device)
                        </td>
     
                    </tr>
                }
            </thead>
            <tbody></tbody>
        </table>
        <br />
        Page @(Model.Items.PageCount < Model.Items.PageNumber ? 0 : Model.Items.PageNumber) of @Model.Items.PageCount

       @Html.PagedListPager(Model.Items, page => Url.Action("Logs",
    new { Model.ApplicationId,page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

    </div>

@section Scripts {
    <script type="text/javascript">
        $('tr[data-href]').on("click", function () {
            document.location = $(this).data('href');
        });
    </script>
}